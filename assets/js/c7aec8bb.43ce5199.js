"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[382],{3335:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var t=s(4848),n=s(8453);const r={sidebar_position:2},i="Quick Start",o={id:"QuickStart",title:"Quick Start",description:"The library has different modules that can be imported separately",source:"@site/../docs/QuickStart.md",sourceDirName:".",slug:"/QuickStart",permalink:"/big-data-types/docs/QuickStart",draft:!1,unlisted:!1,editUrl:"https://github.com/data-tools/big-data-types/edit/main/website/../docs/QuickStart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Circe (JSON)",permalink:"/big-data-types/docs/Modules/Circe"},next:{title:"Transformations",permalink:"/big-data-types/docs/Transformations"}},l={},c=[{value:"How it works",id:"how-it-works",level:2},{value:"Quick examples",id:"quick-examples",level:3}];function d(e){const a={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(a.h1,{id:"quick-start",children:"Quick Start"}),"\n",(0,t.jsx)(a.p,{children:"The library has different modules that can be imported separately"}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"BigQuery"}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:'libraryDependencies += "io.github.data-tools" %% "big-data-types-bigquery" % "{version}"\n'})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Spark"}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:'libraryDependencies += "io.github.data-tools" %% "big-data-types-spark" % "{version}"\n'})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Cassandra"}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:'libraryDependencies += "io.github.data-tools" %% "big-data-types-cassandra" % "{version}"\n'})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"Circe (JSON)"}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:'libraryDependencies += "io.github.data-tools" %% "big-data-types-circe" % "{version}"\n'})}),"\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsxs)(a.li,{children:["Core","\n",(0,t.jsxs)(a.ul,{children:["\n",(0,t.jsx)(a.li,{children:"To get support for abstract SqlTypes, it is included in the others, so it is not needed if you are using one of the others"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{children:'libraryDependencies += "io.github.data-tools" %% "big-data-types-core" % "{version}"\n'})}),"\n",(0,t.jsxs)(a.p,{children:["Versions for Scala ",(0,t.jsx)(a.img,{src:"https://img.shields.io/badge/Scala-2.12-red",alt:"Scala 2.12"})," ,",(0,t.jsx)(a.img,{src:"https://img.shields.io/badge/Scala-2.13-red",alt:"Scala_2.13"}),"\nand ",(0,t.jsx)(a.img,{src:"https://img.shields.io/badge/Scala-3.0-red",alt:"Scala 3.x"})," are available in Maven"]}),"\n",(0,t.jsx)(a.p,{children:"In order to transform one type into another, both modules have to be imported."}),"\n",(0,t.jsx)(a.h2,{id:"how-it-works",children:"How it works"}),"\n",(0,t.jsxs)(a.p,{children:["The library internally uses a generic ADT (",(0,t.jsx)(a.a,{href:"https://github.com/data-tools/big-data-types/blob/main/core/src/main/scala_3/org/datatools/bigdatatypes/basictypes/SqlType.scala",children:"SqlType"}),")\nthat can store any schema representation, and from there, it can be converted into any other.\nTransformations are done through 2 different type-classes."]}),"\n",(0,t.jsx)(a.h3,{id:"quick-examples",children:"Quick examples"}),"\n",(0,t.jsx)(a.p,{children:"Case Classes to other types"}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-scala",children:'//Spark\nval s: StructType = SparkSchemas.schema[MyCaseClass]\n//BigQuery\nval bq: List[Field] = SqlTypeToBigQuery[MyCaseClass].bigQueryFields // just the schema\nBigQueryTable.createTable[MyCaseClass]("myDataset", "myTable") // Create a table in a BigQuery real environment\n//Cassandra\nval c: CreateTable = CassandraTables.table[MyCaseClass]\n'})}),"\n",(0,t.jsxs)(a.p,{children:["There are also ",(0,t.jsx)(a.code,{children:"extension methods"})," that make easier the transformation between types when there are instances"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-scala",children:'//from Case Class instance\nval foo: MyCaseClass = ???\nfoo.asBigQuery // List[Field]\nfoo.asSparkSchema // StructType\nfoo.asCassandra("TableName", "primaryKey") // CreateTable\n'})}),"\n",(0,t.jsxs)(a.p,{children:[(0,t.jsx)(a.strong,{children:"Conversion between types"})," works in the same way"]}),"\n",(0,t.jsx)(a.pre,{children:(0,t.jsx)(a.code,{className:"language-scala",children:'// From Spark to others\nval foo: StructType = myDataFrame.schema\nfoo.asBigQuery // List[Field]\nfoo.asCassandra("TableName", "primaryKey") // CreateTable\n\n//From BigQuery to others\nval foo: Schema = ???\nfoo.asSparkFields // List[StructField]\nfoo.asSparkSchema // StructType\nfoo.asCassandra("TableName", "primaryKey") // CreateTable\n\n//From Cassandra to others\nval foo: CreateTable = ???\nfoo.asSparkFields // List[StructField]\nfoo.asSparkSchema // StructType\nfoo.asBigQuery // List[Field]\nfoo.asBigQuery.schema // Schema\n'})}),"\n",(0,t.jsxs)(a.p,{children:["Check the ",(0,t.jsx)(a.a,{href:"./Contributing/CreateNewType",children:"complete guide on how to create a new type"})," to understand how the library works internally"]})]})}function h(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,t.jsx)(a,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,a,s)=>{s.d(a,{R:()=>i,x:()=>o});var t=s(6540);const n={},r=t.createContext(n);function i(e){const a=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),t.createElement(r.Provider,{value:a},e.children)}}}]);